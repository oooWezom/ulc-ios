# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version

fastlane_version "2.37.0"
xcversion(version: "7.3.1") # Selects Xcode 7.3.1
default_platform :ios

platform :ios do

 before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods    
  end

  #desc "Runs all the tests"
  #lane :test do
    #scan
  #end

#increment_build_number
#increment_build_number_in_plist(
#        build_number: Time.now.strftime("%Y%m%d%H%M"),
#	target: 'Template'
#      )

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
lane :beta do |values|

    increment_build_number build_number: ENV["BUILD_NUMBER"]

    # match(type: "appstore") # more information: https://codesigning.guide
    #cert
    # Get provisioning profile (and update if necessary)
    #sigh
    ENV["PROFILE_UDID"] = lane_context[SharedValues::SIGH_UDID]
    gym(scheme: "ULC",
      workspace: "ULC.xcworkspace",
      clean: true,
      silent: false,
      configuration: "Debug",
      output_directory: "build",
      output_name: "IPA_NAME.ipa",
      include_bitcode: false)

      pilot
      
      build_number = get_build_number(xcodeproj: "ULC.xcodeproj")
      tag_string = "build-" + build_number
      add_git_tag(tag: tag_string)      
      push_to_git_remote
      clean_build_artifacts

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
